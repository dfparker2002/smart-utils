<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.aem.smart-utils</groupId>
        <artifactId>parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>


    <artifactId>smart-utils-commons</artifactId>
    <packaging>bundle</packaging>

    <name>${project.groupId} - ${project.artifactId}</name>

    <description>
        This is stand alone bundle which is includes all sportchek utils working with JCR API.
        This bundle can be installed with 'auto-deploy' profile only or manually.
    </description>

    <dependencies>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.jcr</groupId>
            <artifactId>jcr</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-jcr-commons</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.jcr.api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.http.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>com.day.commons.osgi.wrapper</groupId>
            <artifactId>com.day.commons.osgi.wrapper.joda-time</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.commons.json</artifactId>
        </dependency>

        <dependency>
            <groupId>com.day.cq</groupId>
            <artifactId>cq-commons</artifactId>
        </dependency>

        <!--Unit tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>

        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.commons.testing</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.testing.sling-mock</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Import-Bundle>
                            *
                        </Import-Bundle>
                        <Import-Package>
                            !org.apache.log,
                            *;resolution:=optional
                        </Import-Package>
                        <Embed-Transitive>false</Embed-Transitive>
                        <Export-Package>
                            com.aem.smart.utils.commons.api.*;
                            com.aem.smart.utils.commons.date.*;
                            com.aem.smart.utils.commons.jcr.*;
                            com.aem.smart.utils.commons.json.*;
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>auto-deploy</id>
            <build>
                <plugins>
                    <!-- Use the sling plugin to automatically deploy the bundle to the JCR tree -->
                    <plugin>
                        <groupId>org.apache.sling</groupId>
                        <artifactId>maven-sling-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-bundle</id>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                                <configuration>
                                    <slingUrl>http://${cq.host}:${cq.port}</slingUrl>
                                    <!-- IMPORTANT: due to an issue with
                                        the 2.1.0 version of the maven-sling-plugin,
                                        the path specified by the slingUrlSuffix
                                        parameter below will not be created
                                        automatically and so must already
                                        exist in your CQ instance BEFORE
                                        trying
                                        to use the auto-deploy profile. See
                                        this link for further information:
                                        http://mail-archives.apache.org/mod_mbox/sling-users/201204.mbox/%3CBD6ED82C-3223-41C2-BF15-C987D7AAFCE3@craigsdickson.com%3E -->
                                    <slingUrlSuffix>/apps/smart-utils/install</slingUrlSuffix>
                                    <user>${cq.user}</user>
                                    <password>${cq.password}</password>
                                    <usePut>true</usePut>
                                    <failOnError>true</failOnError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
